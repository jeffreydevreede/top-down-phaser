{"version":3,"file":"game.js","sources":["resources/assets/js/state.js","resources/assets/js/states/boot.js","resources/assets/js/states/load.js","resources/assets/js/states/menu.js","resources/assets/js/play/player.js","resources/assets/js/play/map.js","resources/assets/js/play/world.js","resources/assets/js/play/user-interface.js","resources/assets/js/states/play.js","resources/assets/js/game.js"],"sourcesContent":["export default class State {\r\n    constructor(game)\r\n    {\r\n        this.game = game;\r\n    }\r\n}","import State from './../state.js';\r\nexport default class BootState extends State\r\n{\r\n    create()\r\n    {\r\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n        this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\r\n\r\n        this.game.state.start('load');\r\n    }\r\n}","import State from './../state.js';\r\nexport default class LoadState extends State\r\n{\r\n    preload()\r\n    {\r\n        var style = {\r\n            fill: '#ffffff',\r\n            align: 'center',\r\n            stroke: '#000000',\r\n            strokeThickness: 4,\r\n        };\r\n\r\n        this.game.stage.backgroundColor = '#27ae60';\r\n\r\n        this.loading = this.game.add.text(this.game.world.width, 344, 'Loading...', style);\r\n        this.loading.style.font = '36px Arial';\r\n        this.loading.anchor.set(0.5);\r\n\r\n        this.percentage = this.game.add.text(this.game.world.width, 404, '0%', style);\r\n        this.percentage.style.font = '26px Arial';\r\n        this.percentage.anchor.set(0.5);\r\n    }\r\n\r\n    create()\r\n    {\r\n        this.game.load.onLoadComplete.add(this.complete, this);\r\n        this.game.load.onFileComplete.add(this.updatePercentage, this);\r\n\r\n        this.game.load.image('menuBackground', '/assets/img/menu/background.png');\r\n        this.game.load.image('player', '/assets/img/play/player.png');\r\n        this.game.load.spritesheet('tiles', '/assets/img/play/tiles.png', 64, 64);\r\n\r\n        this.game.load.start();\r\n    }\r\n\r\n    updatePercentage(progress)\r\n    {\r\n        this.percentage.setText(progress + \"%\");\r\n    }\r\n\r\n    complete()\r\n    {\r\n        this.load.onLoadComplete.removeAll();\r\n        this.load.onFileComplete.removeAll();\r\n        this.game.state.start('menu');\r\n    }\r\n}","import State from './../state.js';\r\nexport default class MenuState extends State\r\n{\r\n    preload()\r\n    {\r\n        console.log('menu preload');\r\n\r\n        this.game.stage.backgroundColor = '#27ae60';\r\n\r\n        const background = this.game.add.image(this.game.world.width * 0.5, this.game.world.height * 0.5, 'menuBackground');\r\n        background.anchor.set(0.5);\r\n\r\n        const text = this.game.add.text(this.game.world.width * 0.5, this.game.world.height * 0.75, \"Click to start\", {\r\n            font: '32px Arial',\r\n            fill: '#ffffff',\r\n            align: 'center',\r\n            stroke: '#000000',\r\n            strokeThickness: 4\r\n        });\r\n        text.anchor.set(0.5);\r\n    }\r\n\r\n    create()\r\n    {\r\n        console.log('menu create');\r\n\r\n        this.game.input.onDown.addOnce(this.play, this);\r\n    }\r\n\r\n    play()\r\n    {\r\n        console.log('menu play');\r\n\r\n        this.game.state.start('play');\r\n    }\r\n}","export default class Player\r\n{\r\n    constructor(game, play)\r\n    {\r\n        this.game = game;\r\n        this.play = play;\r\n\r\n        // find worldX, worldY, mapX, mapY, username\r\n        this.worldX = 0;\r\n        this.worldY = 0;\r\n        this.mapX = 15;\r\n        this.mapY = 11;\r\n        this.username = 'Whinger';\r\n    }\r\n\r\n    create()\r\n    {\r\n        // render\r\n        var left = this.play.world.mapWidth * this.worldX + this.mapX * this.play.world.tileWidth + this.play.world.tileWidth / 2;\r\n        var top = this.play.world.mapHeight * this.worldY + this.mapY * this.play.world.tileHeight + this.play.world.tileHeight / 2;\r\n\r\n        this.sprite = this.game.add.sprite(left, top, 'player');\r\n\r\n        this.sprite.anchor.setTo(.5, .5);\r\n        this.game.physics.enable(this.sprite, Phaser.Physics.ARCADE);\r\n        this.game.camera.follow(this.sprite);\r\n\r\n        this.wasd = {\r\n            up: this.game.input.keyboard.addKey(Phaser.Keyboard.W),\r\n            down: this.game.input.keyboard.addKey(Phaser.Keyboard.S),\r\n            left: this.game.input.keyboard.addKey(Phaser.Keyboard.A),\r\n            right: this.game.input.keyboard.addKey(Phaser.Keyboard.D),\r\n        };\r\n    }\r\n\r\n    update()\r\n    {\r\n        this.updateMovement();\r\n\r\n        // calculate sprite pointing direction, based on mouse location, camera location, and player location.\r\n        this.updateRotation();\r\n\r\n        // update players relative point on the map, this could be used to persist location to server.\r\n        this.updateMapLocation();\r\n        this.updateWorldLocation();\r\n    }\r\n\r\n    updateMovement()\r\n    {\r\n        this.sprite.body.velocity.x = 0;\r\n        this.sprite.body.velocity.y = 0;\r\n        this.sprite.body.angularVelocity = 0;\r\n\r\n        if (this.wasd.left.isDown) {\r\n            this.sprite.body.velocity.x = -200;\r\n        }\r\n        else if (this.wasd.right.isDown) {\r\n            this.sprite.body.velocity.x = 200;\r\n        }\r\n\r\n        if (this.wasd.up.isDown) {\r\n           this.sprite.body.velocity.y = -200;\r\n        }\r\n        else if (this.wasd.down.isDown) {\r\n           this.sprite.body.velocity.y = 200;\r\n        }\r\n    }\r\n\r\n    updateRotation()\r\n    {\r\n        var rotation = Math.atan2(this.game.input.activePointer.y - this.sprite.y + this.game.camera.y, this.game.input.activePointer.x - this.sprite.x + this.game.camera.x);\r\n        this.sprite.rotation = rotation;\r\n    }\r\n\r\n    updateMapLocation()\r\n    {\r\n        this.mapX = Math.floor((this.sprite.x % this.play.world.mapWidth) / this.play.world.tileWidth);\r\n        this.mapY = Math.floor((this.sprite.y % this.play.world.mapHeight) / this.play.world.tileHeight);\r\n    }\r\n\r\n    updateWorldLocation()\r\n    {\r\n        this.worldX = Math.floor(this.sprite.x / this.play.world.mapWidth);\r\n        this.worldY = Math.floor(this.sprite.y / this.play.world.mapHeight);\r\n    }\r\n}","export default class Map {\r\n    constructor(worldX, worldY, world, json)\r\n    {\r\n        this.worldX = worldX;\r\n        this.worldY = worldY;\r\n        this.world = world;\r\n        this.json = json;\r\n\r\n        // update the maps position in pixels.\r\n        this.top = this.worldY * this.world.mapHeight;\r\n        this.right = this.worldX * this.world.mapWidth + this.world.mapWidth;\r\n        this.bottom = this.worldY * this.world.mapHeight + this.world.mapHeight;\r\n        this.left = this.worldX * this.world.mapWidth;\r\n    }\r\n\r\n    /**\r\n     * Renders the map based on the json tilemap.\r\n     * @param Phaser.Game phaser game object.\r\n     */\r\n    render(game)\r\n    {\r\n        if(!this.json) {\r\n            // map doesn't exist\r\n            return;\r\n        }\r\n\r\n        const map = this;\r\n\r\n        map.tiles = game.add.group();\r\n\r\n        const mapLeft = this.left;\r\n        const mapTop = this.top;\r\n\r\n        const tileWidth = this.world.tileWidth;\r\n        const tileHeight = this.world.tileHeight;\r\n\r\n        const collisionMap = this.json.collision;\r\n        this.json.sprite.forEach(function (row, y) {\r\n            row.forEach(function (frame, x) {\r\n                // calculate left and top position in pixels for this tile.\r\n                var left = mapLeft + (x * tileWidth);\r\n                var top = mapTop + (y * tileHeight);\r\n\r\n                // create the map background tiles based on the tiled sprite.\r\n                var sprite = game.add.sprite(left, top, 'tiles', frame);\r\n                \r\n                // add sprite tiles group\r\n                map.tiles.add(sprite);\r\n\r\n                // in case the sprite should collide, we add it to the worlds collidables\r\n                if(collisionMap[y][x]) {\r\n                    game.physics.enable(sprite, Phaser.Physics.ARCADE);\r\n                    sprite.body.immovable = true;\r\n                    map.world.addCollidable(sprite);\r\n                }\r\n            });\r\n        });\r\n\r\n        game.world.sendToBack(map.tiles);\r\n    }\r\n\r\n    remove() {\r\n        this.tiles.destroy(true);\r\n    }\r\n}","import Map from './map.js';\n\nexport default class World\n{\n    constructor(game, play)\n    {\n        this.game = game;\n        this.play = play;\n\n        this.maps = {};\n        this.loadedMaps = {};\n\n        this.tileWidth = 64;\n        this.tileHeight = 64;\n        this.mapWidth = 32*64;\n        this.mapHeight = 24*64;\n\n        this.top = null;\n        this.right = null;\n        this.bottom = null;\n        this.left = null;\n\n        this.collidables = this.game.add.physicsGroup();\n\n        // load the initial map the player spawns on.\n        this.loadMap(this.play.player.worldX, this.play.player.worldY);\n    }\n\n    create()\n    {\n        this.setMapLoadingBoundries();\n    }\n\n    update()\n    {\n        var loadMap = this.shouldLoadMap();\n\n        // is the player close enough to the next map that we should load it?\n        if(loadMap) {\n            // we take the players current position\n            var x = this.play.player.worldX;\n            var y = this.play.player.worldY;\n\n            // we calculate the world x and y for the new map\n            switch(loadMap)\n            {\n                case 'top':\n                    y = this.play.player.worldY - 1;\n                    break;\n                case 'right':\n                    x = this.play.player.worldX + 1;\n                    break;\n                case 'bottom':\n                    y = this.play.player.worldY + 1;\n                    break;\n                case 'left':\n                    x = this.play.player.worldX - 1;\n                    break;\n            }\n\n            // do the actual loading\n            this.loadMap(x, y);\n        }\n\n        this.game.physics.arcade.collide(this.play.player.sprite, this.collidables);\n    }\n\n    setMapLoadingBoundries()\n    {\n        this.topLoadingBoundry = Math.floor((this.mapHeight / this.tileHeight) * 0.4);\n        this.rightLoadingBoundry = Math.ceil((this.mapWidth / this.tileWidth) * 0.6);\n        this.bottomLoadingBoundry = Math.floor((this.mapHeight / this.tileHeight) * 0.6);\n        this.leftLoadingBoundry = Math.ceil((this.mapWidth / this.tileWidth) * 0.4);\n    }\n\n    shouldLoadMap()\n    {\n        // top\n        if(this.play.player.mapY < this.topLoadingBoundry) {\n            return 'top';\n        }\n        // right\n        if(this.play.player.mapX > this.rightLoadingBoundry) {\n            return 'right';\n        }\n        // bottom\n        if(this.play.player.mapY > this.bottomLoadingBoundry) {\n            return 'bottom';\n        }\n\n        // left\n        if(this.play.player.mapX < this.leftLoadingBoundry) {\n            return 'left';\n        }\n\n        return false;\n    }\n\n    loadMap(x, y)\n    {\n        if(this.loadedMaps[x+'x'+y]) {\n            return;\n        }\n        this.loadedMaps[x+'x'+y] = true;\n        console.log('load map '+x+'x'+y);\n\n        // load the maps json data @TODO Load through ajax call\n        this.game.load.json('map'+x+'x'+y, '/maps/'+x+'.'+y+'.json');\n        this.game.load.onLoadComplete.addOnce(function () {\n            // get the json data.\n            const json = this.game.cache.getJSON('map'+x+'x'+y);\n            if(!json) {\n                return;\n            }\n\n            // create new map object which handles the making of the sprites.\n            this.maps[x+'x'+y] = new Map(x, y, this, json);\n\n            const map = this.maps[x+'x'+y];\n            map.render(this.game);\n\n            // update world position information\n            if(map.top < this.top) { this.top = map.top; }\n            if(map.right > this.right) { this.right = map.right; }\n            if(map.bottom > this.bottom) { this.bottom = map.bottom; }\n            if(map.left < this.left) { this.left = map.left; }\n        }, this);\n\n        this.game.load.start();\n    }\n\n    addCollidable(sprite)\n    {\n        this.collidables.add(sprite);\n    }\n\n    collectGarbage()\n    {\n        var world = this;\n\n        for (var position in this.maps)\n        {\n            var x = position.split('x')[0];\n            var y = position.split('x')[1];\n\n            // remove maps that are further away than 2 full map loads\n            if(\n                this.play.player.worldX - 2 >= x || this.play.player.worldX + 2 <= x\n                ||\n                this.play.player.worldY - 2 >= y || this.play.player.worldY + 2 <= y\n            ) {\n                this.maps[position].remove();\n                delete this.maps[position];\n                delete this.loadedMaps[position];\n            }\n        };\n    }\n}","export default class UserInterface {\r\n    constructor(stage)\r\n    {\r\n        this.stage = stage;\r\n    }\r\n\r\n    create()\r\n    {\r\n\r\n    }\r\n\r\n    update()\r\n    {\r\n        \r\n    }\r\n}","import State from './../state.js';\r\nimport Player from './../play/player.js';\r\nimport World from './../play/world.js';\r\nimport UserInterface from './../play/user-interface.js';\r\n\r\nexport default class PlayState extends State\r\n{\r\n    preload()\r\n    {\r\n        console.log('play preload');\r\n        \r\n        this.game.stage.backgroundColor = '#27ae60';\r\n\r\n        // required to show fps\r\n        this.game.time.advancedTiming = true;\r\n\r\n        this.game.camera.bounds = null;\r\n\r\n        // create player object\r\n        this.player = new Player(this.game, this);\r\n\r\n        // create world object\r\n        this.world = new World(this.game, this);\r\n\r\n        // create user interface object\r\n        this.userInterface = new UserInterface(this);\r\n\r\n        // some garbage collection settings\r\n        this.collectGarbageInterval = 10 * 1000; // run once every 10 seconds\r\n        this.collectedGarbageTime = null; // last time the garbage was collected\r\n    }\r\n\r\n    create()\r\n    {\r\n        console.log('play create');\r\n        \r\n        this.player.create();\r\n        this.world.create();\r\n        this.userInterface.create();\r\n        \r\n    }\r\n\r\n    update()\r\n    {\r\n        // show fps\r\n        this.game.debug.text(this.game.time.fps, 50, 50);\r\n\r\n        this.player.update();\r\n        this.world.update();\r\n        this.userInterface.update();\r\n\r\n        this.collectGarbage();\r\n    }\r\n\r\n    collectGarbage()\r\n    {\r\n        // should we collect garbage?\r\n        if(this.game.time.now - this.collectedGarbageTime < this.collectGarbageInterval) {\r\n            // nothing to do yet.\r\n            return;\r\n        }\r\n        this.collectedGarbageTime = this.game.time.now;\r\n\r\n        console.log('play collect garbage');\r\n\r\n        // currently we only collect the worlds garbage :)\r\n        this.world.collectGarbage();\r\n    }\r\n}","import BootState from './states/boot.js';\nimport LoadState from './states/load.js';\nimport MenuState from './states/menu.js';\nimport PlayState from './states/play.js';\n\nconst game = new Phaser.Game(1440, 900, Phaser.AUTO, '');\n\ngame.state.add('boot', new BootState(game));\ngame.state.add('load', new LoadState(game));\ngame.state.add('menu', new MenuState(game));\ngame.state.add('play', new PlayState(game));\n\ngame.state.start('boot');\n"],"names":["const","this"],"mappings":"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"}